% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{GCM_internal}
\alias{GCM_internal}
\title{The generalized covariance measure test of Shah and Peters.}
\usage{
GCM_internal(X, Y, Z, family, method, fitted = list(XZ = NULL, YZ = NULL))
}
\arguments{
\item{X}{Numeric vector of length \eqn{n}, representing the predictor variable.}

\item{Y}{Numeric vector of length \eqn{n}, representing the response variable.}

\item{Z}{Numeric matrix with \eqn{n} rows and \eqn{p} columns, representing covariates.}

\item{family}{Named list with elements \code{XZ} and \code{YZ} specifying the model family for \eqn{X \mid Z} and
\eqn{Y \mid Z} for each model. Each list element must be a string (e.g. \code{"binomial"},
\code{"poisson"}). Ignored for any model where you supply your own fitted values via \code{fitted}.}

\item{method}{Named list with elements \code{XZ} and \code{YZ} that selects the model-fitting method to use
for each model. Each element must be a string (e.g. \code{"glm"}, \code{"random_forest"}).
Ignored for any model where you supply your own fitted values via \code{fitted}.}

\item{fitted}{Named list with elements \code{XZ} and \code{YZ} of user-supplied fitted values
(numeric vectors of length n). For each non-NULL element, that model is
treated as custom and neither \code{method} nor \code{family} is used.}
}
\value{
A named list with fields \code{test_stat}, \code{p.left} (Left-sided p-value),
\code{p.right} (Right-sided p-value), \code{p.both} (Two-sided p-value).
}
\description{
\code{GCM_internal} is a function carrying out the GCM test based on GLMs for \code{X|Z} and \code{Y|Z}.
}
\examples{
n <- 200; p <- 4
set.seed(1234)
X <- rbinom(n = n, size = 1, prob = 0.3)
Y <- rpois(n = n, lambda = 1)
Z <- matrix(rnorm(n = n*p, mean = 0, sd = 1), nrow = n, ncol = p)

# fit both models via GLM
res.GCM.1 <- GCM_internal(X = X, Y = Y, Z = Z,
                          family = list(XZ = "binomial", YZ = "poisson"),
                          method = list(XZ = "glm", YZ = "glm"))
res.GCM.1

# custom fit for Y|Z, explicit method/family only for X|Z
user_fit_Y <- glm(Y ~ Z,
                  family = poisson(),
                  data = data.frame(Y = Y, Z = Z))$fitted.values |> unname()

res.GCM.2 <- GCM_internal(X = X, Y = Y, Z = Z,
                          family = list(XZ = "binomial"),
                          method = list(XZ = "random_forest"),
                          fitted = list(XZ = NULL, YZ = user_fit_Y))
res.GCM.2

}
