% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/method_helpers.R
\name{spa_cdf_old}
\alias{spa_cdf_old}
\title{\code{spa_cdf} SPA to CDF of T_n = S_n / sqrt(n)}
\usage{
spa_cdf_old(t, P, W, fam, R, max_expansions = 10)
}
\arguments{
\item{t}{The point where the CGF will be computed.}

\item{P}{X_on_Z_fit$fitted.values}

\item{W}{Y - Y_on_Z_fit$fitted.values}

\item{fam}{The GLM family which includes the distribution whose CGF is being
evaluated (values can be \code{gaussian}, \code{binomial}, \code{poisson}, etc).}

\item{R}{stats::uniroot() search space endpoint}

\item{max_expansions}{Maximum number of times stats::uniroot() search space shuold be broadened}
}
\value{
Simulated data from an appropriate distribution.
}
\description{
\code{spa_cdf} SPA to CDF of T_n = S_n / sqrt(n)
}
\examples{
n <- 100; p <- 2; normalize <- FALSE; return_cdf <- FALSE
data <- list(X = rbinom(n = n, size = 1, prob = 0.2),
             Y = rpois(n = n, lambda = 1),
             Z = matrix(rnorm(n = n*p, mean = 0, sd = 1), nrow = n, ncol = p))
X <- data$X; Y <- data$Y; Z <- data$Z
X_on_Z_fit <- suppressWarnings(stats::glm(X ~ Z, family = "binomial"))
Y_on_Z_fit <- suppressWarnings(stats::glm(Y ~ Z, family = "poisson"))
W <- Y - Y_on_Z_fit$fitted.values
P <- X_on_Z_fit$fitted.values
prod_resids <- (X - X_on_Z_fit$fitted.values) * W
test_stat <- 1/sqrt(n) * sum(prod_resids)
spa_cdf(t = test_stat + sum(P*W)/sqrt(n), P = P, W = W, fam = "binomial", R = 1000)

}
