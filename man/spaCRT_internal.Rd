% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{spaCRT_internal}
\alias{spaCRT_internal}
\title{The saddlepoint approximation to the dCRT.}
\usage{
spaCRT_internal(
  data,
  X_on_Z_fam,
  Y_on_Z_fam,
  fitting_X_on_Z = "glm",
  fitting_Y_on_Z = "glm",
  fit_vals_X_on_Z_own = NULL,
  fit_vals_Y_on_Z_own = NULL
)
}
\arguments{
\item{data}{A (non-empty) named list with fields \code{X} (an nx1 vector for the predictor
variable of interest), \code{Y} (an nx1 response vector), and \code{Z} (an nxp matrix
of covariates).}

\item{X_on_Z_fam}{The GLM family for the regression of X on Z (values can be \code{binomial},
\code{poisson}, etc).}

\item{Y_on_Z_fam}{The GLM family for the regression of Y on Z (values can be \code{binomial},
\code{poisson}, \code{negative.binomial}, etc).}

\item{fitting_X_on_Z}{The fitting method for the regression X on Z (values can be \code{glm} (default),
\code{random_forest}, or \code{NA}).}

\item{fitting_Y_on_Z}{The fitting method for the regression Y on Z (values can be \code{glm} (default),
\code{random_forest}, or \code{NA}).}

\item{fit_vals_X_on_Z_own}{Vector of fitted values for X on Z in case the user's custom method.}

\item{fit_vals_Y_on_Z_own}{Vector of fitted values for Y on Z in case the user's custom method.}
}
\value{
A named list with fields \code{test_stat}, \code{p.left} (Left-sided p-value),
\code{p.right} (Right-sided p-value), \code{p.both} (Two-sided p-value), and \code{spa.success}.
\code{spa.success} returns TRUE if the saddlepoint equation could be solved; otherwise,
the backup method (GCM) was employed.
.
}
\description{
\code{spaCRT_internal} is a function carrying out the saddlepoint approximation to the
dCRT based on GLMs for \code{X|Z} and \code{Y|Z}.
}
\examples{
n <- 200; p <- 4
set.seed(1234)
X <- rbinom(n = n, size = 1, prob = 0.3)
Y <- rpois(n = n, lambda = 1)
Z <- matrix(rnorm(n = n*p, mean = 0, sd = 1), nrow = n, ncol = p)
data <- list(X = X, Y = Y, Z = Z)

# fit both models via GLM
res.spaCRT.1 <- spaCRT_internal(data,
                                X_on_Z_fam = "binomial", Y_on_Z_fam = "poisson",
                                fitting_X_on_Z = 'glm', fitting_Y_on_Z = 'glm',
                                fit_vals_X_on_Z_own = NULL, fit_vals_Y_on_Z_own = NULL)
res.spaCRT.1

# custom fit for Y|Z, explicit method/family only for X|Z
dtrain <- xgboost::xgb.DMatrix(data = Z, label = Y)
model.Y <- xgboost::xgboost(data = dtrain,
                            objective = "count:poisson",
                            nrounds = 100, verbose = 0)
user_fit_Y <- stats::predict(model.Y, newdata = Z)

res.spaCRT.2 <- spaCRT_internal(data,
                                X_on_Z_fam = "binomial", Y_on_Z_fam = NULL,
                                fitting_X_on_Z = 'random_forest', fitting_Y_on_Z = NULL,
                                fit_vals_X_on_Z_own = NULL, fit_vals_Y_on_Z_own = user_fit_Y)
res.spaCRT.2

}
