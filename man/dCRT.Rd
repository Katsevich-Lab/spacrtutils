% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{dCRT}
\alias{dCRT}
\title{The distilled conditional randomization test.}
\usage{
dCRT(
  data,
  X_on_Z_fam = NULL,
  Y_on_Z_fam = NULL,
  B,
  normalize = FALSE,
  return_resamples = FALSE,
  aux_info_X_on_Z = NULL,
  aux_info_Y_on_Z = NULL
)
}
\arguments{
\item{data}{A named list with fields \code{X} (an nx1 vector for the predictor
variable of interest), \code{Y} (an nx1 response vector), and \code{Z}
(an nxp matrix of covariates).}

\item{X_on_Z_fam}{The GLM family for the regression of X on Z
(values can be \code{gaussian}, \code{binomial}, \code{poisson}, etc).}

\item{Y_on_Z_fam}{The GLM family for the regression of Y on Z
(values can be \code{gaussian}, \code{binomial}, \code{poisson}, etc).}

\item{B}{The number of resamples to draw.}

\item{normalize}{A logical variable indicating whether the dCRT should be
normalized.}

\item{return_resamples}{A logical variable indicating whether to return the
resampled test statistics.}

\item{aux_info_X_on_Z}{The auxiliary information that may be used for complex GLM regression
(For instance, when X_on_Z_fam = negative.binomial, the dispersion parameter should be provided).}

\item{aux_info_Y_on_Z}{The auxiliary information that may be used for complex GLM regression
(For instance, when Y_on_Z_fam = negative.binomial, the dispersion parameter should be provided).}
}
\value{
A named list with fields \code{test_stat}, \code{p_value}, and
\code{resamples}. Here, \code{resamples} is a vector of length \code{B}. It
is returned only if \code{return_resamples == TRUE}.
}
\description{
\code{dCRT} is a function carrying out the dCRT based on GLMs for X|Z and Y|Z.
}
\examples{
n <- 20; p <- 2; B <- 100; normalize <- FALSE; return_resamples <- FALSE
data <- list(X = rbinom(n = n, size = 1, prob = 0.2),
             Y = rpois(n = n, lambda = 1),
             Z = matrix(rnorm(n = n*p, mean = 0, sd = 1), nrow = n, ncol = p))
X_on_Z_fam <- "binomial"
Y_on_Z_fam <- "poisson"
results <- dCRT(data, X_on_Z_fam, Y_on_Z_fam, B, normalize, return_resamples)
results$test_stat
results$p_value
}
